/**
 * The @wire service.
 *
 * Provides data binding between wire adapters and LWC components decorated with @wire.
 * Register wire adapters with `register(adapterId: any, adapterFactory: WireAdapterFactory)`.
 */
import { WireEventTargetListener, WireEventTarget } from './wiring';
import { ValueChangedEvent } from './value-changed-event';
import { LinkContextEvent } from './link-context-event';
export interface WireEventTarget {
    dispatchEvent(evt: ValueChangedEvent): boolean;
    addEventListener(type: string, listener: WireEventTargetListener): void;
    removeEventListener(type: string, listener: WireEventTargetListener): void;
}
export declare type WireAdapterFactory = (eventTarget: WireEventTarget) => void;
/**
 * Registers the wire service.
 */
export declare function registerWireService(registerService: (object: any) => void): void;
/**
 * Registers a wire adapter.
 */
export declare function register(adapterId: any, adapterFactory: WireAdapterFactory): void;
export { ValueChangedEvent, LinkContextEvent };
