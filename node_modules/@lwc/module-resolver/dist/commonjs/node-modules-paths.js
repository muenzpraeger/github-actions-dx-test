"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
/**
 * Adapted from Jest, which is adapted from:
 * https://github.com/browserify/resolve
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
function nodeModulesPaths(basedir, moduleDirectory) {
    const modules = moduleDirectory ? [...moduleDirectory] : ['node_modules'];
    // ensure that `basedir` is an absolute path at this point,
    // resolving against the process' current working directory
    const basedirAbs = path_1.default.resolve(basedir);
    let prefix = '/';
    if (/^([A-Za-z]:)/.test(basedirAbs)) {
        prefix = '';
    }
    else if (/^\\\\/.test(basedirAbs)) {
        prefix = '\\\\';
    }
    const paths = [basedirAbs];
    let parsed = path_1.default.parse(basedirAbs);
    while (parsed.dir !== paths[paths.length - 1]) {
        paths.push(parsed.dir);
        parsed = path_1.default.parse(parsed.dir);
    }
    const dirs = paths.reduce((dirs, aPath) => {
        return dirs.concat(modules.map(moduleDir => {
            return path_1.default.join(prefix, aPath, moduleDir);
        }));
    }, []);
    return dirs;
}
exports.default = nodeModulesPaths;
//# sourceMappingURL=node-modules-paths.js.map