"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const observable_membrane_1 = __importDefault(require("observable-membrane"));
const watcher_1 = require("./watcher");
function valueDistortion(value) {
    return value;
}
exports.reactiveMembrane = new observable_membrane_1.default({
    valueObserved: watcher_1.observeMutation,
    valueMutated: watcher_1.notifyMutation,
    valueDistortion,
});
/**
 * EXPERIMENTAL: This function implements an unwrap mechanism that
 * works for observable membrane objects. This API is subject to
 * change or being removed.
 */
exports.unwrap = function (value) {
    const unwrapped = exports.reactiveMembrane.unwrapProxy(value);
    if (unwrapped !== value) {
        // if value is a proxy, unwrap to access original value and apply distortion
        return valueDistortion(unwrapped);
    }
    return value;
};
//# sourceMappingURL=membrane.js.map