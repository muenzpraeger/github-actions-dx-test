"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const language_1 = require("../../shared/language");
function handleEvent(event, vnode) {
    const { type } = event;
    const { data: { on }, } = vnode;
    const handler = on && on[type];
    // call event handler if exists
    if (handler) {
        handler.call(undefined, event);
    }
}
function createListener() {
    return function handler(event) {
        handleEvent(event, handler.vnode);
    };
}
function updateAllEventListeners(oldVnode, vnode) {
    if (language_1.isUndefined(oldVnode.listener)) {
        createAllEventListeners(vnode);
    }
    else {
        vnode.listener = oldVnode.listener;
        vnode.listener.vnode = vnode;
    }
}
function createAllEventListeners(vnode) {
    const { data: { on }, } = vnode;
    if (language_1.isUndefined(on)) {
        return;
    }
    const elm = vnode.elm;
    const listener = (vnode.listener = createListener());
    listener.vnode = vnode;
    let name;
    for (name in on) {
        elm.addEventListener(name, listener);
    }
}
exports.default = {
    update: updateAllEventListeners,
    create: createAllEventListeners,
};
//# sourceMappingURL=events.js.map