declare type Callback = () => void;
export declare const SPACE_CHAR = 32;
export declare const EmptyObject: any;
export declare const EmptyArray: never[];
export declare const ViewModelReflection: symbol;
export declare function addCallbackToNextTick(callback: Callback): void;
interface CircularModuleDependency {
    <T>(): T;
    readonly __circular__?: any;
}
export declare function isCircularModuleDependency(value: any): value is CircularModuleDependency;
/**
 * When LWC is used in the context of an Aura application, the compiler produces AMD
 * modules, that doesn't resolve properly circular dependencies between modules. In order
 * to circumvent this issue, the module loader returns a factory with a symbol attached
 * to it.
 *
 * This method returns the resolved value if it received a factory as argument. Otherwise
 * it returns the original value.
 */
export declare function resolveCircularModuleDependency(fn: CircularModuleDependency): any;
export declare const useSyntheticShadow: boolean;
export {};
