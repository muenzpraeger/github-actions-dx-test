import { VNode, VNodes } from '../3rdparty/snabbdom/types';
import { RenderAPI } from './api';
import { Context } from './context';
import { SlotSet, VM } from './vm';
import { registerTemplate } from './secure-template';
import { StylesheetFactory } from './stylesheet';
export { registerTemplate };
export interface Template {
    (api: RenderAPI, cmp: object, slotSet: SlotSet, ctx: Context): VNodes;
    /**
     * The stylesheet associated with the template.
     */
    stylesheets?: StylesheetFactory[];
    /**
     * List of property names that are accessed of the component instance
     * from the template.
     */
    ids?: string[];
    stylesheetTokens?: {
        /**
         * HTML attribute that need to be applied to the host element. This attribute is used for the
         * `:host` pseudo class CSS selector.
         */
        hostAttribute: string;
        /**
         * HTML attribute that need to the applied to all the element that the template produces.
         * This attribute is used for style encapsulation when the engine runs with synthetic shadow.
         */
        shadowAttribute: string;
    };
}
export declare function evaluateTemplate(vm: VM, html: Template): Array<VNode | null>;
