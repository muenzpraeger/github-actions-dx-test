import { TemplateIdentifier, TemplateExpression, IRNode, IRText, IRElement, HTMLElement, HTMLText } from './types';
export declare type VisitorFn = (element: IRNode) => void;
export interface NodeVisitor {
    enter?: VisitorFn;
    exit?: VisitorFn;
}
export interface Visitor {
    [type: string]: NodeVisitor;
}
export declare function createElement(tag: string, original: HTMLElement): IRElement;
export declare function createText(original: HTMLText, value: string | TemplateExpression): IRText;
export declare function isElement(node: IRNode): node is IRElement;
export declare function isCustomElement(node: IRNode): boolean;
export declare function traverse(node: IRNode, visitor: Visitor): void;
export declare function isComponentProp(identifier: TemplateIdentifier, node?: IRNode): boolean;
export declare function isBoundToIterator(identifier: TemplateIdentifier, node?: IRNode): boolean;
