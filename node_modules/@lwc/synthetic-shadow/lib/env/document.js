"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const language_1 = require("../shared/language");
const DocumentPrototypeActiveElement = language_1.getOwnPropertyDescriptor(Document.prototype, 'activeElement').get;
exports.DocumentPrototypeActiveElement = DocumentPrototypeActiveElement;
const elementFromPoint = language_1.hasOwnProperty.call(Document.prototype, 'elementFromPoint')
    ? Document.prototype.elementFromPoint
    : Document.prototype.msElementFromPoint; // IE11
exports.elementFromPoint = elementFromPoint;
// defaultView can be null when a document has no browsing context. For example, the owner document
// of a node in a template doesn't have a default view: https://jsfiddle.net/hv9z0q5a/
const defaultViewGetter = language_1.getOwnPropertyDescriptor(Document.prototype, 'defaultView').get;
exports.defaultViewGetter = defaultViewGetter;
const { createComment, querySelectorAll, getElementById, getElementsByClassName, getElementsByTagName, getElementsByTagNameNS, } = Document.prototype;
exports.createComment = createComment;
exports.querySelectorAll = querySelectorAll;
exports.getElementById = getElementById;
exports.getElementsByClassName = getElementsByClassName;
exports.getElementsByTagName = getElementsByTagName;
exports.getElementsByTagNameNS = getElementsByTagNameNS;
// In Firefox v57 and lower, getElementsByName is defined on HTMLDocument.prototype
// In all other browsers have the method on Document.prototype
const { getElementsByName } = HTMLDocument.prototype;
exports.getElementsByName = getElementsByName;
//# sourceMappingURL=document.js.map