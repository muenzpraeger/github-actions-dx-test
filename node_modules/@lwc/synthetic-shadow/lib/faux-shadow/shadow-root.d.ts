export declare type ShadowRootResolver = () => ShadowRoot;
export declare function getShadowRootResolver(node: Node): undefined | ShadowRootResolver;
export declare function setShadowRootResolver(node: Node, fn: ShadowRootResolver): void;
export declare function isDelegatingFocus(host: HTMLElement): boolean;
export declare function getHost(root: SyntheticShadowRootInterface): HTMLElement;
export declare function getShadowRoot(elm: HTMLElement): SyntheticShadowRootInterface;
export declare function hasSyntheticShadow(elm: HTMLElement): boolean;
export declare function attachShadow(elm: HTMLElement, options: ShadowRootInit): SyntheticShadowRootInterface;
export interface SyntheticShadowRootInterface extends ShadowRoot {
    delegatesFocus: boolean;
}
declare function SyntheticShadowRoot(): void;
declare namespace SyntheticShadowRoot {
    var prototype: any;
}
export default SyntheticShadowRoot;
/**
 * This method is only intended to be used in non-production mode in IE11
 * and its role is to produce a 1-1 mapping between a shadowRoot instance
 * and a comment node that is intended to use to trick the IE11 DevTools
 * to show the content of the shadowRoot in the DOM Explorer.
 */
export declare function getIE11FakeShadowRootPlaceholder(host: HTMLElement): Comment;
