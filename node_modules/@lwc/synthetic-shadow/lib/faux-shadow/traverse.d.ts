import { SyntheticShadowRootInterface } from './shadow-root';
import '../polyfills/node-get-root-node/main';
export declare const patchedGetRootNode: (options?: GetRootNodeOptions | undefined) => Node;
export declare function getNodeOwner(node: Node): HTMLElement | null;
export declare function isSlotElement(elm: Element): boolean;
export declare function isNodeOwnedBy(owner: HTMLElement, node: Node): boolean;
export declare function shadowRootChildNodes(root: SyntheticShadowRootInterface): Array<Element & Node>;
export declare function getAllMatches(owner: HTMLElement, nodeList: NodeList | Node[]): Array<Element & Node>;
export declare function getFirstMatch(owner: HTMLElement, nodeList: NodeList): Element | null;
export declare function shadowRootQuerySelector(root: SyntheticShadowRootInterface, selector: string): Element | null;
export declare function shadowRootQuerySelectorAll(root: SyntheticShadowRootInterface, selector: string): Element[];
export declare function getFilteredChildNodes(node: Node): Element[];
