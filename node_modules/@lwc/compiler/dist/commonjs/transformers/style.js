"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const styleCompiler = __importStar(require("@lwc/style-compiler"));
const errors_1 = require("@lwc/errors");
function styleTransform(src, filename, config) {
    const { minify } = config.outputConfig;
    const { customProperties } = config.stylesheetConfig;
    const styleCompilerConfig = {
        customProperties: {
            allowDefinition: customProperties.allowDefinition,
            resolverModule: customProperties.resolution.type === 'module'
                ? customProperties.resolution.name
                : undefined,
        },
        outputConfig: {
            minify,
        },
    };
    let res;
    try {
        res = styleCompiler.transform(src, filename, styleCompilerConfig);
    }
    catch (e) {
        throw errors_1.normalizeToCompilerError(errors_1.TransformerErrors.CSS_TRANSFORMER_ERROR, e, { filename });
    }
    // Rollup only cares about the mappings property on the map. Since producing a source map for
    // the styles doesn't make sense, the transform returns an empty mappings.
    return {
        code: res.code,
        map: { mappings: '' },
    };
}
exports.default = styleTransform;
//# sourceMappingURL=style.js.map