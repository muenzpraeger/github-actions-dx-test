"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: MIT
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT
 */
const babel = __importStar(require("@babel/core"));
const babel_plugin_component_1 = __importDefault(require("@lwc/babel-plugin-component"));
const errors_1 = require("@lwc/errors");
const babel_plugins_1 = require("../babel-plugins");
function scriptTransform(code, filename, options) {
    const { isExplicitImport } = options;
    const config = Object.assign({}, babel_plugins_1.BABEL_CONFIG_BASE, {
        plugins: [[babel_plugin_component_1.default, { isExplicitImport }], ...babel_plugins_1.BABEL_PLUGINS_BASE],
        filename,
        sourceMaps: options.outputConfig.sourcemap,
    });
    let result;
    try {
        result = babel.transform(code, config);
    }
    catch (e) {
        throw errors_1.normalizeToCompilerError(errors_1.TransformerErrors.JS_TRANSFORMER_ERROR, e, { filename });
    }
    return {
        code: result.code,
        map: result.map,
    };
}
exports.default = scriptTransform;
//# sourceMappingURL=javascript.js.map